-- ============================================
-- RAPPORT COMPLET DE LA BASE DE DONN√âES
-- ============================================
-- Ce script g√©n√®re un rapport d√©taill√© de l'√©tat actuel
-- de votre base de donn√©es Nino Wash
-- Version: Affichage avec SELECT pour garantir la visibilit√©

-- ============================================
-- PARTIE 1: STATISTIQUES G√âN√âRALES
-- ============================================

SELECT 
    'üìä STRUCTURE DE LA BASE DE DONN√âES' as section,
    '' as details;

SELECT 
    'Tables totales' as metric,
    COUNT(*)::text as valeur
FROM information_schema.tables 
WHERE table_schema = 'public' AND table_type = 'BASE TABLE';

SELECT 
    'user_id nullable (invit√©s)' as metric,
    CASE WHEN is_nullable = 'YES' THEN '‚úÖ OUI' ELSE '‚ùå NON' END as valeur
FROM information_schema.columns 
WHERE table_name = 'bookings' AND column_name = 'user_id';

SELECT 
    'service_id existe (booking_items)' as metric,
    CASE WHEN EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'booking_items' AND column_name = 'service_id'
    ) THEN '‚úÖ OUI' ELSE '‚ùå NON' END as valeur;

-- ============================================
-- PARTIE 2: UTILISATEURS
-- ============================================

SELECT 
    'üë• UTILISATEURS' as section,
    '' as details;

SELECT 
    'Total utilisateurs' as metric,
    COUNT(*)::text as valeur
FROM users;

SELECT 
    'Utilisateurs actifs' as metric,
    COUNT(*)::text as valeur
FROM users 
WHERE deleted_at IS NULL;

SELECT 
    'Utilisateurs avec r√©servations' as metric,
    COUNT(DISTINCT user_id)::text as valeur
FROM bookings 
WHERE user_id IS NOT NULL;

SELECT 
    'Utilisateurs avec abonnements' as metric,
    COUNT(DISTINCT user_id)::text as valeur
FROM subscriptions 
WHERE user_id IS NOT NULL;

-- ============================================
-- PARTIE 3: SERVICES
-- ============================================

SELECT 
    'üß∫ SERVICES' as section,
    '' as details;

SELECT 
    'Total services' as metric,
    COUNT(*)::text as valeur
FROM services;

SELECT 
    'Services actifs' as metric,
    COUNT(*)::text as valeur
FROM services 
WHERE is_active = true;

SELECT 
    'Services inactifs' as metric,
    COUNT(*)::text as valeur
FROM services 
WHERE is_active = false;

SELECT 
    'Services Classiques (72h)' as metric,
    COUNT(*)::text as valeur
FROM services 
WHERE metadata->>'category' = 'classic';

SELECT 
    'Services Express (24h)' as metric,
    COUNT(*)::text as valeur
FROM services 
WHERE metadata->>'category' = 'express';

-- ============================================
-- PARTIE 4: D√âTAIL DES SERVICES ACTIFS
-- ============================================

SELECT 
    'üìã D√âTAIL DES SERVICES ACTIFS' as section,
    '' as details;

SELECT 
    name as "Service",
    code as "Code",
    base_price::text || '‚Ç¨' as "Prix",
    COALESCE(metadata->>'category', 'N/A') as "Cat√©gorie",
    COALESCE(metadata->>'delivery_time', processing_days::text || ' jours') as "D√©lai"
FROM services 
WHERE is_active = true
ORDER BY base_price;

-- ============================================
-- PARTIE 5: R√âSERVATIONS
-- ============================================

SELECT 
    'üìÖ R√âSERVATIONS' as section,
    '' as details;

SELECT 
    'Total r√©servations' as metric,
    COUNT(*)::text as valeur
FROM bookings;

SELECT 
    'R√©servations invit√©s' as metric,
    COUNT(*)::text as valeur
FROM bookings 
WHERE user_id IS NULL;

SELECT 
    'R√©servations utilisateurs' as metric,
    COUNT(*)::text as valeur
FROM bookings 
WHERE user_id IS NOT NULL;

SELECT 
    'En attente' as metric,
    COUNT(*)::text as valeur
FROM bookings 
WHERE status = 'pending';

SELECT 
    'Confirm√©es' as metric,
    COUNT(*)::text as valeur
FROM bookings 
WHERE status = 'confirmed';

SELECT 
    'Compl√©t√©es' as metric,
    COUNT(*)::text as valeur
FROM bookings 
WHERE status = 'completed';

SELECT 
    'Annul√©es' as metric,
    COUNT(*)::text as valeur
FROM bookings 
WHERE status = 'cancelled';

SELECT 
    'Items de r√©servation' as metric,
    COUNT(*)::text as valeur
FROM booking_items;

-- ============================================
-- PARTIE 6: DONN√âES COMPL√âMENTAIRES
-- ============================================

SELECT 
    'üì¶ DONN√âES COMPL√âMENTAIRES' as section,
    '' as details;

SELECT 
    'Adresses' as metric,
    COUNT(*)::text as valeur
FROM user_addresses;

SELECT 
    'Livreurs' as metric,
    COUNT(*)::text as valeur
FROM delivery_drivers;

SELECT 
    'Abonnements' as metric,
    COUNT(*)::text as valeur
FROM subscriptions;

SELECT 
    'Factures' as metric,
    COUNT(*)::text as valeur
FROM invoices;

SELECT 
    'Transactions paiement' as metric,
    COUNT(*)::text as valeur
FROM payment_transactions;

-- ============================================
-- PARTIE 7: APER√áU FINANCIER
-- ============================================

SELECT 
    'üí∞ APER√áU FINANCIER' as section,
    '' as details;

SELECT 
    'Revenu total (compl√©t√©)' as metric,
    COALESCE(SUM(total_amount), 0)::text || '‚Ç¨' as valeur
FROM bookings 
WHERE status = 'completed';

SELECT 
    'Revenu en attente' as metric,
    COALESCE(SUM(total_amount), 0)::text || '‚Ç¨' as valeur
FROM bookings 
WHERE status IN ('pending', 'confirmed');

-- ============================================
-- PARTIE 8: R√âSUM√â FINAL
-- ============================================

SELECT 
    '‚ú® R√âSUM√â FINAL' as section,
    '' as details;

SELECT 
    'Structure de base' as aspect,
    CASE 
        WHEN (SELECT is_nullable FROM information_schema.columns WHERE table_name = 'bookings' AND column_name = 'user_id') = 'YES'
        AND EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'booking_items' AND column_name = 'service_id')
        THEN '‚úÖ CONFORME'
        ELSE '‚ö†Ô∏è N√âCESSITE CORRECTIONS'
    END as statut;

SELECT 
    'Services configur√©s' as aspect,
    CASE 
        WHEN (SELECT COUNT(*) FROM services WHERE is_active = true) >= 4 
        THEN '‚úÖ CONFIGUR√âS (' || (SELECT COUNT(*) FROM services WHERE is_active = true)::text || ' actifs)'
        ELSE '‚ö†Ô∏è INCOMPLETS (' || (SELECT COUNT(*) FROM services)::text || ' services)'
    END as statut;

SELECT 
    'R√©servations' as aspect,
    CASE 
        WHEN (SELECT COUNT(*) FROM bookings) > 0 
        THEN '‚úÖ OP√âRATIONNELLES (' || (SELECT COUNT(*) FROM bookings)::text || ' r√©servations)'
        ELSE '‚ÑπÔ∏è AUCUNE DONN√âE'
    END as statut;

SELECT 
    '‚úÖ Rapport g√©n√©r√© avec succ√®s!' as message,
    NOW()::text as timestamp;
